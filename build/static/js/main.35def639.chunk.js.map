{"version":3,"sources":["firebase.js","Post.js","ImageUpload.jsx","App.js","index.js"],"names":["require","db","firebase","default","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","postId","imageUrl","user","username","caption","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","cmt","text","type","placeholder","value","onChange","e","target","disabled","onClick","event","preventDefault","add","displayName","ImageUpload","setCaption","image","setImage","progress","setProgress","max","files","Button","ref","name","put","on","progresss","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","timestamp","FieldValue","serverTimestamp","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","React","modalStyle","posts","setposts","open","setOpen","openSignIn","setOpenSignIn","setUsername","email","setEmail","password","setPassword","setUser","onAuthStateChanged","authUser","orderBy","id","post","Modal","onClose","style","action","method","height","marginBottom","fontStyle","class","required","createUserWithEmailAndPassword","updateProfile","catch","signInWithEmailAndPassword","borderRadius","objectFit","signOut","clientAccessToken","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35def639.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n// Required for side-effects\nimport firebase from 'firebase'\nrequire('firebase/firestore')\nrequire('firebase/auth')\n\nconst firebaseApp= firebase.default.initializeApp({\n        apiKey: \"AIzaSyBvWF_Nom75oVsgXFYPc3PzRB5r7xn4-G4\",\n        authDomain: \"instagram-clone-fb31e.firebaseapp.com\",\n        projectId: \"instagram-clone-fb31e\",\n        storageBucket: \"instagram-clone-fb31e.appspot.com\",\n        messagingSenderId: \"980145745778\",\n        appId: \"1:980145745778:web:d828b6d58436823a02b7eb\",\n        measurementId: \"G-3L1YX5YESW\"\n    });\n\nconst db =firebaseApp.firestore();\nconst auth =firebase.auth();\nconst storage = firebase.storage();\n\nexport {db, auth, storage};\n\n//document id=WAFBb6S843MKdyi4TcSd\n//database name =instapost\n","import React, { useState , useEffect} from \"react\";\nimport './Post.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { db } from \"./firebase\";\n\n\nfunction Post({postId , imageUrl , user, username , caption}) {\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState(\"\");        //to keep track of a single comment\n\n    useEffect(() => {\n        let unsubscribe;\n        if(postId){\n            unsubscribe=db.collection('instapost').doc(postId).collection(\"comments\").onSnapshot((snapshot) => {\n                setComments(snapshot.docs.map((doc) => doc.data()));\n\n                });     //in simple word here we are summoning from comments which is on firebase db \n           \n        }\n        return() => {\n            unsubscribe();\n        }\n\n\n    },[postId])\n\n    function postComment(event){\n        event.preventDefault();\n        db.collection('instapost').doc(postId).collection(\"comments\").add({    //simple word here we are adding it in a comments section of db\n            text: comment,\n            username: user.displayName\n\n        })\n        setComment('');\n\n    }\n    return (\n        <div className=\"post\">\n        <div className=\"post_header\">\n            <Avatar className=\"post_avatar\" alt=\"\" src=\"\"/>\n            <h3>{username}</h3>\n        </div>\n\n            \n            <img className=\"post_image\" alt=\"\" src={imageUrl}></img>\n            <h4 className=\"post_text\"><strong>{username}</strong> {caption}</h4>\n            <div className=\"coment_display\">\n                {comments.map((cmt)=>(\n                    <p><strong>{cmt.username}</strong>{cmt.text}</p>    //came from database \n                ))}\n            </div>\n            \n            {user && (\n                <form className=\"post_commentBox\">\n                   <input className=\"post_input\" type=\"text\" placeholder=\"Add a comment...\" value={comment} onChange={(e) => setComment(e.target.value)} />\n                   <button disabled={!comment} className=\"post_button\" type=\"submit\" onClick={postComment} >post</button>\n               </form>\n            )}        \n\n            {/* user && is for when user is there then only show add a comment button */}\n\n            \n        </div>\n    )\n}\n\nexport default Post;\n","import React, { useState } from 'react'\nimport { Button } from '@material-ui/core'\nimport { db, storage} from \"./firebase\";\nimport './ImageUpload.css';\nimport firebase from 'firebase'\nrequire('firebase/firestore')\n\nfunction ImageUpload({username}) {\n    const[caption, setCaption] = useState(\"\");\n    const[image, setImage] = useState(null);\n    const[progress, setProgress] = useState(0)\n\n    function handleCaptionChange(event) {\n        setCaption(event.target.value)\n    }\n\n    function handleChange (e){      //it is a file input so these function tell upload the first image bcus sometime we click multiple file\n        if(e.target.files[0]){\n            setImage(e.target.files[0])\n        }\n    }\n\n    function handleUpload(){\n        // /these is doing uploading in database\n        const uploadTask =storage.ref(`images/${image.name}`).put(image)    //acess to storage firebase get a reference to images (image name is here file name we choose)folder and put that image to storage \n        //these is going to show upload progress line \n           uploadTask.on(\n               \"state_changed\",  //as state change give me the snaap shot\n               (snapshot) =>{\n                   //progress function\n                   const progresss =Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100 );\n                   setProgress(progresss);\n               },\n               (error) => {\n                   //error function\n                   console.log(error);\n                   alert(error.message)\n               },\n               () => {\n                   //complete function /these is here to get uploading image in data\n                   storage           //go to ref images /go to (image.name child which is file here) /download the url\n                      .ref(\"images\")\n                      .child(image.name)\n                      .getDownloadURL()\n                      .then(url => {\n                          //post image inside data base and asign value of each\n                          db.collection(\"instapost\").add({\n                              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                              caption: caption,   //caption from caption state\n                              imageUrl: url ,   //it a download url we hold og in then\n                              username: username,  //it from app.js\n                          });\n                          setProgress(0);   //reseting everything\n                          setCaption(\"\");\n                          setImage(null);\n                      })\n               }\n           ) \n    }\n    return (\n        <div className=\"image_upload\">            \n            <progress className=\"progress_bar\" value={progress} max=\"100\" /> \n            <input type=\"text\" placeholder=\"Enter a captaion....\" value={caption} onChange={handleCaptionChange} />                 \n            <input type=\"file\" onChange={handleChange}/>\n            <Button onClick={handleUpload}>UPLOAD</Button>\n        </div>\n    )\n}\n\nexport default ImageUpload;\n","import React,{ useState, useEffect} from \"react\"\nimport './App.css';\nimport Post from \"./Post\";\nimport { db, auth} from \"./firebase\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button } from \"@material-ui/core\";\nimport ImageUpload from \"./ImageUpload\";\nimport InstagramEmbed from 'react-instagram-embed';\n\n\n//for syling in modal \n//everything is there in material ui modal\nfunction getModalStyle() {      //these style will help to give us like popup sign in and mail\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles(); //we have hook here makestyle which have accesss of useSTyle and then we give it acess to const classes so that we can use it on <modal component for styling\n  const [modalStyle] = React.useState(getModalStyle);     \n  const [posts, setposts] = useState([])\n  const [open, setOpen] = useState(false); \n  const [openSignIn, setOpenSignIn] = useState(false); \n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);             \n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {            //any single time auth change it fires these listner\n      if (authUser){                     //if user has logged in \n        setUser(authUser);\n      }else{                             //useer has log out\n        setUser(null);\n      }\n    })\n    return () => {                            //run a listner one then unsubscribe before listning again\n      unsubscribe()\n    }\n  }, [user, username]);           //in simple world is that these is used when we are using some state so we have to put here \n\n  // it run a piece of a code based on a specific condition\n  useEffect(() => {\n    //these is where the code run\n    db.collection('instapost').orderBy('timestamp','desc').onSnapshot(snapshot => {\n      //everytime these code is added a new code fire \n      //below tell whenever codes get fire change state of set post to these\n      //go to snapshot then in document then map and date here is caption img username\n      //to get id we have created here object \n      setposts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })))\n    });\n  }, []) ;   //these is called conditon or if we leave these blank the code gonna run once then it will not run and if we fill with posts then code gonna run once and it goona run everytime posts chaange\n  \n\n  //\n  //these is modal handle close function\n  //onCose listen to a click outside the modal whenever u click outside the modal it closes\n \n\n  function signUp(event){\n    setOpen(true);\n    event.preventDefault();\n  }\n\n  function signIn(event){\n    setOpenSignIn(true);\n    event.preventDefault();\n  }\n\n  function popupSignup (event){\n    event.preventDefault();\n    auth.createUserWithEmailAndPassword(email, password)  //these is first part these is gonna create the user email password came from state\n      .then((authUser) => {\n        // Signed  \n        return authUser.user.updateProfile({                  //user came from state variable \n          displayName: username,\n        });\n        // ...\n      })\n      .catch((error) => alert(error.message));\n      //so these listner is telling create email password in email and password variable then update display name as username \n      setOpen(false);      //we don't want that modal to open when we click sign up then so to close it we set to false\n  }\n\n  function popupSignIn (event){\n    event.preventDefault();\n    auth.signInWithEmailAndPassword(email, password) \n    .catch((error) => alert(error.message));\n    setOpenSignIn(false);\n  }\n\n  return (\n \n    <div className=\"app\">\n\n    <Modal open={open} onClose={()=> setOpen(false)}>   \n\n    <div style={modalStyle} className={classes.paper}>  \n\n          <form action=\"/examples/actions/confirmation.php\" method=\"post\">\n            \n            <center> \n              <img \n              src=\"https://png.pngitem.com/pimgs/s/104-1044084_insta-logo-hd-png-download.png\" \n              alt=\"\"  \n              style={{\n                width: 50,\n                height: 40,\n                marginBottom: 8,\n                }}\n                />\n                <h3 style={{fontStyle: 'italic',}}>New to instagram <p>Signup here</p></h3> \n            </center>\n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Username\" required=\"required\" value={username}  onChange={(e)=> setUsername(e.target.value) }/>\n            </div>\n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" name=\"email\" placeholder=\"email\" required=\"required\" value={email} onChange={(e)=> setEmail(e.target.value)}/>\n            </div>\n            <div class=\"form-group\">\n              <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" required=\"required\" value={password} onChange={(e)=> setPassword(e.target.value)}/>\t\n            </div>        \n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary btn-lg btn-block login-btn\" onClick={popupSignup}>Signup</button>\n            </div>\n\t\t\t\t</form>\n          \n      \n    </div>\n    </Modal>\n\n{/* these is sign in modal and up one is for sign up modal */}\n    <Modal open={openSignIn} onClose={()=> setOpenSignIn(false)}> \n\n    <div style={modalStyle} className={classes.paper}>  \n\n          <form action=\"/examples/actions/confirmation.php\" method=\"post\">\n            \n            <center> \n              <img \n              src=\"https://png.pngitem.com/pimgs/s/104-1044084_insta-logo-hd-png-download.png\" \n              alt=\"\"  \n              style={{\n                width: 50,\n                height: 40,  \n                marginBottom: 8,\n                }}\n                />\n                <h3 style={{fontStyle: 'italic',}}> <p>SIGNIN HERE</p></h3> \n            </center>\n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" name=\"email\" placeholder=\"email\" required=\"required\" value={email} onChange={(e)=> setEmail(e.target.value)}/>\n            </div>\n            <div class=\"form-group\">\n              <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" required=\"required\" value={password} onChange={(e)=> setPassword(e.target.value)}/>\t\n            </div>        \n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary btn-lg btn-block login-btn\" onClick={popupSignIn}>SignIN</button>\n            </div>\n\t\t\t\t</form>\n          \n      \n    </div>\n    </Modal>\n      \n      <div className=\"app_header\">\n        <img          \n          src=\"https://png.pngitem.com/pimgs/s/104-1044084_insta-logo-hd-png-download.png\" \n          alt=\"\"  \n          style={{\n            width: 40,\n            height: 50,\n            borderRadius: 30, \n            marginBottom: 3,\n            objectFit: 'contain',\n            }}>\n        </img>\n        <h1 className=\"title\">Instagram</h1>\n\n        {user ?(\n        <Button onClick={()=> auth.signOut()}>SIGN OUT</Button>\n        ) : (\n          <div className=\"sign_container\">\n            <Button onClick={signIn}>SIGN IN</Button>  \n            <Button onClick={signUp}>SIGN UP</Button>\n          </div>\n          \n          )}\n\n      </div>\n\n      {user?.displayName?(             //here we are telling sign in first before uploading /so if user has display name then only upload these component otherwise say u need to login first and the first questionmark after user to tell don't break if displayname not found \n        <ImageUpload username={user.displayName}/>\n        ):(\n          <h3 className=\"text_upload\">SIGNIN TO UPLOAD PHOTO</h3>\n        )}\n\n      {/* conditional button says if user is not null  then i want to render these where the button says to signout else new user is then signup */}\n      <div className=\"app_post\">\n        <div className=\"app_postLeft\">\n          {posts.map(({id, post}) =>{   //we have use destructure method here for id\n            return(\n              <Post key={id} postId={id} user={user}username={post.username} caption={post.caption} imageUrl={post.imageUrl}/>\n            )\n          })}\n\n\n\n        </div>\n        \n        <div className=\"app_posRight\">\n\n        {/* these below instagram emded is not working */}\n        <InstagramEmbed\n          url='https://www.instagram.com/_singh_hrithik_/'\n          clientAccessToken='123|456'\n          maxWidth={320}\n          hideCaption={false}\n          containerTagName='div'\n          protocol=''\n          injectScript\n          onLoading={() => {}}\n          onSuccess={() => {}}\n          onAfterRender={() => {}}\n          onFailure={() => {}}\n        />\n\n        </div>\n\n      </div>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}