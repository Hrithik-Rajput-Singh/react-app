{"ast":null,"code":"import _slicedToArray from\"/Users/hrithiksingh/Desktop/instagram/insta-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Button}from'@material-ui/core';import{db,storage}from\"./firebase\";import'./ImageUpload.css';import firebase from'firebase';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";require('firebase/firestore');function ImageUpload(_ref){var username=_ref.username;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),caption=_useState2[0],setCaption=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),image=_useState4[0],setImage=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),progress=_useState6[0],setProgress=_useState6[1];function handleCaptionChange(event){setCaption(event.target.value);}function handleChange(e){//it is a file input so these function tell upload the first image bcus sometime we click multiple file\nif(e.target.files[0]){setImage(e.target.files[0]);}}function handleUpload(){// /these is doing uploading in database\nvar uploadTask=storage.ref(\"images/\".concat(image.name)).put(image);//acess to storage firebase get a reference to images (image name is here file name we choose)folder and put that image to storage \n//these is going to show upload progress line \nuploadTask.on(\"state_changed\",//as state change give me the snaap shot\nfunction(snapshot){//progress function\nvar progresss=Math.round(snapshot.bytesTransferred/snapshot.totalBytes*100);setProgress(progresss);},function(error){//error function\nconsole.log(error);alert(error.message);},function(){//complete function /these is here to get uploading image in data\nstorage//go to ref images /go to (image.name child which is file here) /download the url\n.ref(\"images\").child(image.name).getDownloadURL().then(function(url){//post image inside data base and asign value of each\ndb.collection(\"instapost\").add({timestamp:firebase.firestore.FieldValue.serverTimestamp(),caption:caption,//caption from caption state\nimageUrl:url,//it a download url we hold og in then\nusername:username//it from app.js\n});setProgress(0);//reseting everything\nsetCaption(\"\");setImage(null);});});}return/*#__PURE__*/_jsxs(\"div\",{className:\"image_upload\",children:[/*#__PURE__*/_jsx(\"progress\",{className:\"progress_bar\",value:progress,max:\"100\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter a captaion....\",value:caption,onChange:handleCaptionChange}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleChange}),/*#__PURE__*/_jsx(Button,{onClick:handleUpload,children:\"UPLOAD\"})]});}export default ImageUpload;","map":{"version":3,"sources":["/Users/hrithiksingh/Desktop/instagram/insta-clone/src/ImageUpload.jsx"],"names":["React","useState","Button","db","storage","firebase","require","ImageUpload","username","caption","setCaption","image","setImage","progress","setProgress","handleCaptionChange","event","target","value","handleChange","e","files","handleUpload","uploadTask","ref","name","put","on","snapshot","progresss","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageUrl"],"mappings":"oIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,KAAuB,mBAAvB,CACA,OAASC,EAAT,CAAaC,OAAb,KAA2B,YAA3B,CACA,MAAO,mBAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,C,wFACAC,OAAO,CAAC,oBAAD,CAAP,CAEA,QAASC,CAAAA,WAAT,MAAiC,IAAXC,CAAAA,QAAW,MAAXA,QAAW,eACAP,QAAQ,CAAC,EAAD,CADR,wCACvBQ,OADuB,eACdC,UADc,8BAEJT,QAAQ,CAAC,IAAD,CAFJ,yCAEvBU,KAFuB,eAEhBC,QAFgB,8BAGEX,QAAQ,CAAC,CAAD,CAHV,yCAGvBY,QAHuB,eAGbC,WAHa,eAK7B,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChCN,UAAU,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV,CACH,CAED,QAASC,CAAAA,YAAT,CAAuBC,CAAvB,CAAyB,CAAO;AAC5B,GAAGA,CAAC,CAACH,MAAF,CAASI,KAAT,CAAe,CAAf,CAAH,CAAqB,CACjBT,QAAQ,CAACQ,CAAC,CAACH,MAAF,CAASI,KAAT,CAAe,CAAf,CAAD,CAAR,CACH,CACJ,CAED,QAASC,CAAAA,YAAT,EAAuB,CACnB;AACA,GAAMC,CAAAA,UAAU,CAAEnB,OAAO,CAACoB,GAAR,kBAAsBb,KAAK,CAACc,IAA5B,GAAoCC,GAApC,CAAwCf,KAAxC,CAAlB,CAAoE;AACpE;AACGY,UAAU,CAACI,EAAX,CACI,eADJ,CACsB;AAClB,SAACC,QAAD,CAAa,CACT;AACA,GAAMC,CAAAA,SAAS,CAAEC,IAAI,CAACC,KAAL,CAAYH,QAAQ,CAACI,gBAAT,CAA4BJ,QAAQ,CAACK,UAAtC,CAAoD,GAA/D,CAAjB,CACAnB,WAAW,CAACe,SAAD,CAAX,CACH,CANL,CAOI,SAACK,KAAD,CAAW,CACP;AACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACAG,KAAK,CAACH,KAAK,CAACI,OAAP,CAAL,CACH,CAXL,CAYI,UAAM,CACF;AACAlC,OAAkB;AAAX,CACHoB,GADJ,CACQ,QADR,EAEIe,KAFJ,CAEU5B,KAAK,CAACc,IAFhB,EAGIe,cAHJ,GAIIC,IAJJ,CAIS,SAAAC,GAAG,CAAI,CACT;AACAvC,EAAE,CAACwC,UAAH,CAAc,WAAd,EAA2BC,GAA3B,CAA+B,CAC3BC,SAAS,CAAExC,QAAQ,CAACyC,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EADgB,CAE3BvC,OAAO,CAAEA,OAFkB,CAEP;AACpBwC,QAAQ,CAAEP,GAHiB,CAGT;AAClBlC,QAAQ,CAAEA,QAAW;AAJM,CAA/B,EAMAM,WAAW,CAAC,CAAD,CAAX,CAAkB;AAClBJ,UAAU,CAAC,EAAD,CAAV,CACAE,QAAQ,CAAC,IAAD,CAAR,CACH,CAfJ,EAgBH,CA9BL,EAgCN,CACD,mBACI,aAAK,SAAS,CAAC,cAAf,wBACI,iBAAU,SAAS,CAAC,cAApB,CAAmC,KAAK,CAAEC,QAA1C,CAAoD,GAAG,CAAC,KAAxD,EADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,WAAW,CAAC,sBAA/B,CAAsD,KAAK,CAAEJ,OAA7D,CAAsE,QAAQ,CAAEM,mBAAhF,EAFJ,cAGI,cAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,CAAEI,YAA7B,EAHJ,cAII,KAAC,MAAD,EAAQ,OAAO,CAAEG,YAAjB,oBAJJ,GADJ,CAQH,CAED,cAAef,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Button } from '@material-ui/core'\nimport { db, storage} from \"./firebase\";\nimport './ImageUpload.css';\nimport firebase from 'firebase'\nrequire('firebase/firestore')\n\nfunction ImageUpload({username}) {\n    const[caption, setCaption] = useState(\"\");\n    const[image, setImage] = useState(null);\n    const[progress, setProgress] = useState(0)\n\n    function handleCaptionChange(event) {\n        setCaption(event.target.value)\n    }\n\n    function handleChange (e){      //it is a file input so these function tell upload the first image bcus sometime we click multiple file\n        if(e.target.files[0]){\n            setImage(e.target.files[0])\n        }\n    }\n\n    function handleUpload(){\n        // /these is doing uploading in database\n        const uploadTask =storage.ref(`images/${image.name}`).put(image)    //acess to storage firebase get a reference to images (image name is here file name we choose)folder and put that image to storage \n        //these is going to show upload progress line \n           uploadTask.on(\n               \"state_changed\",  //as state change give me the snaap shot\n               (snapshot) =>{\n                   //progress function\n                   const progresss =Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100 );\n                   setProgress(progresss);\n               },\n               (error) => {\n                   //error function\n                   console.log(error);\n                   alert(error.message)\n               },\n               () => {\n                   //complete function /these is here to get uploading image in data\n                   storage           //go to ref images /go to (image.name child which is file here) /download the url\n                      .ref(\"images\")\n                      .child(image.name)\n                      .getDownloadURL()\n                      .then(url => {\n                          //post image inside data base and asign value of each\n                          db.collection(\"instapost\").add({\n                              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                              caption: caption,   //caption from caption state\n                              imageUrl: url ,   //it a download url we hold og in then\n                              username: username,  //it from app.js\n                          });\n                          setProgress(0);   //reseting everything\n                          setCaption(\"\");\n                          setImage(null);\n                      })\n               }\n           ) \n    }\n    return (\n        <div className=\"image_upload\">            \n            <progress className=\"progress_bar\" value={progress} max=\"100\" /> \n            <input type=\"text\" placeholder=\"Enter a captaion....\" value={caption} onChange={handleCaptionChange} />                 \n            <input type=\"file\" onChange={handleChange}/>\n            <Button onClick={handleUpload}>UPLOAD</Button>\n        </div>\n    )\n}\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}