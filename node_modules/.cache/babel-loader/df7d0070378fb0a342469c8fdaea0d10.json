{"ast":null,"code":"var _jsxFileName = \"/Users/hrithiksingh/Desktop/instagram/insta-clone/src/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './Post.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport firebase from 'firebase';\nimport { db } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post({\n  postId,\n  imageUrl,\n  user,\n  username,\n  caption\n}) {\n  _s();\n\n  console.log(postId);\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\"); //to keep track of a single comment\n\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = db.collection('instapost').doc(postId).collection(\"comments\").onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  function postComment(event) {\n    event.preventDefault();\n    db.collection('instapost').doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName\n    });\n    setComment('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: \"post_avatar\",\n        alt: \"\",\n        src: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"post_image\",\n      alt: \"\",\n      src: imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"post_text\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 39\n      }, this), \" \", caption]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coment_display\",\n      children: [comments.map(cmt => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: cmt.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this), cmt.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this) //came from database \n      ), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post_commentBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"post_input\",\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !comment,\n        className: \"post_button\",\n        type: \"submit\",\n        onClick: postComment,\n        children: \"post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"aYxbrUc54hXgN49xzwQnaOlcG0E=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/hrithiksingh/Desktop/instagram/insta-clone/src/Post.js"],"names":["React","useState","useEffect","Avatar","firebase","db","Post","postId","imageUrl","user","username","caption","console","log","comments","setComments","comment","setComment","unsubscribe","collection","doc","onSnapshot","snapshot","docs","map","data","postComment","event","preventDefault","add","text","displayName","cmt","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState , useEffect} from \"react\";\nimport './Post.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport firebase from 'firebase';\nimport { db } from \"./firebase\";\n\n\nfunction Post({postId , imageUrl , user, username , caption}) {\n    console.log(postId);\n    const [comments, setComments] = useState([])\n    const [comment, setComment] = useState(\"\")        //to keep track of a single comment\n\n    useEffect(() => {\n        let unsubscribe;\n        if(postId){\n            unsubscribe=db.collection('instapost').doc(postId).collection(\"comments\").onSnapshot((snapshot) => {\n                setComments(snapshot.docs.map((doc) => doc.data()));\n\n                });\n           \n        }\n        return() => {\n            unsubscribe();\n        }\n\n\n    },[postId])\n\n    function postComment(event){\n        event.preventDefault();\n        db.collection('instapost').doc(postId).collection(\"comments\").add({\n            text: comment,\n            username: user.displayName\n\n        })\n        setComment('');\n\n    }\n    return (\n        <div className=\"post\">\n        <div className=\"post_header\">\n            <Avatar className=\"post_avatar\" alt=\"\" src=\"\"/>\n            <h3>{username}</h3>\n        </div>\n\n            \n            <img className=\"post_image\" alt=\"\" src={imageUrl}></img>\n            <h4 className=\"post_text\"><strong>{username}</strong> {caption}</h4>\n            <div className=\"coment_display\">\n                {comments.map((cmt)=>(\n                    <p><strong>{cmt.username}</strong>{cmt.text}</p>    //came from database \n                ))};\n            </div>\n\n            <form className=\"post_commentBox\">\n               <input className=\"post_input\" type=\"text\" placeholder=\"Add a comment...\" value={comment} onChange={(e) => setComment(e.target.value)} />\n               <button disabled={!comment} className=\"post_button\" type=\"submit\" onClick={postComment} >post</button>\n            </form>\n            \n        </div>\n    )\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}