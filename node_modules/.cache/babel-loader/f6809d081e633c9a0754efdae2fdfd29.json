{"ast":null,"code":"var _jsxFileName = \"/Users/hrithiksingh/Desktop/instagram/insta-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Post from \"./Post\";\nimport { db, auth } from \"./firebase\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button } from \"@material-ui/core\";\nimport ImageUpload from \"./ImageUpload\"; //for syling in modal \n//everything is there in material ui modal\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getModalStyle() {\n  //these style will help to give us like popup sign in and mail\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles(); //we have hook here makestyle which have accesss of useSTyle and then we give it acess to const classes so that we can use it on <modal component for styling\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [posts, setposts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(authUser => {\n      //any single time auth change it fires these listner\n      if (authUser) {\n        //if user has logged in \n        setUser(authUser);\n      } else {\n        //useer has log out\n        setUser(null);\n      }\n    });\n    return () => {\n      //run a listner one then unsubscribe before listning again\n      unsubscribe();\n    };\n  }, [user, username]); //in simple world is that these is used when we are using some state so we have to put here \n  // it run a piece of a code based on a specific condition\n\n  useEffect(() => {\n    //these is where the code run\n    db.collection('instapost').onSnapshot(snapshot => {\n      //everytime these code is added a new code fire \n      //below tell whenever codes get fire change state of set post to these\n      //go to snapshot then in document then map and date here is caption img username\n      //to get id we have created here object \n      setposts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n    });\n  }, []); //these is called conditon or if we leave these blank the code gonna run once then it will not run and if we fill with posts then code gonna run once and it goona run everytime posts chaange\n  //\n  //these is modal handle close function\n  //onCose listen to a click outside the modal whenever u click outside the modal it closes\n\n  function signUp(event) {\n    setOpen(true);\n    event.preventDefault();\n  }\n\n  function signIn(event) {\n    setOpenSignIn(true);\n    event.preventDefault();\n  }\n\n  function popupSignup(event) {\n    event.preventDefault();\n    auth.createUserWithEmailAndPassword(email, password) //these is first part these is gonna create the user email password came from state\n    .then(authUser => {\n      // Signed  \n      return authUser.user.updateProfile({\n        //user came from state variable \n        displayName: username\n      }); // ...\n    }).catch(error => alert(error.message)); //so these listner is telling create email password in email and password variable then update display name as username \n\n    setOpen(false); //we don't want that modal to open when we click sign up then so to close it we set to false\n  }\n\n  function popupSignIn(event) {\n    event.preventDefault();\n    auth.signInWithEmailAndPassword(email, password).catch(error => alert(error.message));\n    setOpenSignIn(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [(user === null || user === void 0 ? void 0 : user.displayName) ? /*#__PURE__*/_jsxDEV(ImageUpload, {\n      usernamee: user.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"u need to login first\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: () => setOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"/examples/actions/confirmation.php\",\n          method: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://png.pngitem.com/pimgs/s/104-1044084_insta-logo-hd-png-download.png\",\n              alt: \"\",\n              style: {\n                width: 50,\n                height: 40,\n                marginBottom: 8\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontStyle: 'italic'\n              },\n              children: [\"New to instagram \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Signup here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 69\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control\",\n              name: \"username\",\n              placeholder: \"Username\",\n              required: \"required\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control\",\n              name: \"email\",\n              placeholder: \"email\",\n              required: \"required\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              class: \"form-control\",\n              name: \"password\",\n              placeholder: \"Password\",\n              required: \"required\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              class: \"btn btn-primary btn-lg btn-block login-btn\",\n              onClick: popupSignup,\n              children: \"Signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openSignIn,\n      onClose: () => setOpenSignIn(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"/examples/actions/confirmation.php\",\n          method: \"post\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://png.pngitem.com/pimgs/s/104-1044084_insta-logo-hd-png-download.png\",\n              alt: \"\",\n              style: {\n                width: 50,\n                height: 40,\n                marginBottom: 8\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontStyle: 'italic'\n              },\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"SIGNIN HERE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control\",\n              name: \"email\",\n              placeholder: \"email\",\n              required: \"required\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              class: \"form-control\",\n              name: \"password\",\n              placeholder: \"Password\",\n              required: \"required\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              class: \"btn btn-primary btn-lg btn-block login-btn\",\n              onClick: popupSignIn,\n              children: \"SignIN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app_header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://png.pngitem.com/pimgs/s/104-1044084_insta-logo-hd-png-download.png\",\n        alt: \"\",\n        style: {\n          width: 40,\n          height: 50,\n          borderRadius: 30,\n          marginBottom: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => auth.signOut(),\n      children: \"SIGN OUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign_container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: signIn,\n        children: \"SIGN IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: signUp,\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }, this), posts.map(({\n      id,\n      post\n    }) => {\n      //we have use destructure method here for id\n      return /*#__PURE__*/_jsxDEV(Post, {\n        username: post.username,\n        caption: post.caption,\n        imageUrl: post.imageUrl\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KnhMUkSNS2NNQxSCGV10ZwRl/iI=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hrithiksingh/Desktop/instagram/insta-clone/src/App.js"],"names":["React","useState","useEffect","Post","db","auth","makeStyles","Modal","Button","ImageUpload","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setposts","open","setOpen","openSignIn","setOpenSignIn","username","setUsername","email","setEmail","password","setPassword","user","setUser","unsubscribe","onAuthStateChanged","authUser","collection","onSnapshot","snapshot","docs","map","doc","id","post","data","signUp","event","preventDefault","signIn","popupSignup","createUserWithEmailAndPassword","then","updateProfile","displayName","catch","error","alert","message","popupSignIn","signInWithEmailAndPassword","height","marginBottom","fontStyle","e","target","value","borderRadius","signOut","caption","imageUrl"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect} from \"react\"\nimport './App.css';\nimport Post from \"./Post\";\nimport { db, auth} from \"./firebase\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button } from \"@material-ui/core\";\nimport ImageUpload from \"./ImageUpload\";\n\n\n//for syling in modal \n//everything is there in material ui modal\nfunction getModalStyle() {      //these style will help to give us like popup sign in and mail\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles(); //we have hook here makestyle which have accesss of useSTyle and then we give it acess to const classes so that we can use it on <modal component for styling\n  const [modalStyle] = React.useState(getModalStyle);     \n  const [posts, setposts] = useState([])\n  const [open, setOpen] = useState(false); \n  const [openSignIn, setOpenSignIn] = useState(false); \n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);             \n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {            //any single time auth change it fires these listner\n      if (authUser){                     //if user has logged in \n        setUser(authUser);\n      }else{                             //useer has log out\n        setUser(null);\n      }\n    })\n    return () => {                            //run a listner one then unsubscribe before listning again\n      unsubscribe()\n    }\n  }, [user, username]);           //in simple world is that these is used when we are using some state so we have to put here \n\n  // it run a piece of a code based on a specific condition\n  useEffect(() => {\n    //these is where the code run\n    db.collection('instapost').onSnapshot(snapshot => {\n      //everytime these code is added a new code fire \n      //below tell whenever codes get fire change state of set post to these\n      //go to snapshot then in document then map and date here is caption img username\n      //to get id we have created here object \n      setposts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })))\n    });\n  }, []) ;   //these is called conditon or if we leave these blank the code gonna run once then it will not run and if we fill with posts then code gonna run once and it goona run everytime posts chaange\n  \n\n  //\n  //these is modal handle close function\n  //onCose listen to a click outside the modal whenever u click outside the modal it closes\n \n\n  function signUp(event){\n    setOpen(true);\n    event.preventDefault();\n  }\n\n  function signIn(event){\n    setOpenSignIn(true);\n    event.preventDefault();\n  }\n\n  function popupSignup (event){\n    event.preventDefault();\n    auth.createUserWithEmailAndPassword(email, password)  //these is first part these is gonna create the user email password came from state\n      .then((authUser) => {\n        // Signed  \n        return authUser.user.updateProfile({                  //user came from state variable \n          displayName: username,\n        });\n        // ...\n      })\n      .catch((error) => alert(error.message));\n      //so these listner is telling create email password in email and password variable then update display name as username \n      setOpen(false);      //we don't want that modal to open when we click sign up then so to close it we set to false\n  }\n\n  function popupSignIn (event){\n    event.preventDefault();\n    auth.signInWithEmailAndPassword(email, password) \n    .catch((error) => alert(error.message));\n    setOpenSignIn(false);\n  }\n\n  return (\n \n    <div className=\"app\">\n\n      {user?.displayName ?(\n        <ImageUpload usernamee={user.displayName}/>\n       ):(\n         <h3>u need to login first</h3>\n       )}\n\n    <Modal open={open} onClose={()=> setOpen(false)}>   \n\n    <div style={modalStyle} className={classes.paper}>  \n\n          <form action=\"/examples/actions/confirmation.php\" method=\"post\">\n            \n            <center> \n              <img \n              src=\"https://png.pngitem.com/pimgs/s/104-1044084_insta-logo-hd-png-download.png\" \n              alt=\"\"  \n              style={{\n                width: 50,\n                height: 40,\n                marginBottom: 8,\n                }}\n                />\n                <h3 style={{fontStyle: 'italic',}}>New to instagram <p>Signup here</p></h3> \n            </center>\n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Username\" required=\"required\" value={username}  onChange={(e)=> setUsername(e.target.value) }/>\n            </div>\n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" name=\"email\" placeholder=\"email\" required=\"required\" value={email} onChange={(e)=> setEmail(e.target.value)}/>\n            </div>\n            <div class=\"form-group\">\n              <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" required=\"required\" value={password} onChange={(e)=> setPassword(e.target.value)}/>\t\n            </div>        \n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary btn-lg btn-block login-btn\" onClick={popupSignup}>Signup</button>\n            </div>\n\t\t\t\t</form>\n          \n      \n    </div>\n    </Modal>\n\n{/* these is sign in modal and up one is for sign up modal */}\n    <Modal open={openSignIn} onClose={()=> setOpenSignIn(false)}> \n\n    <div style={modalStyle} className={classes.paper}>  \n\n          <form action=\"/examples/actions/confirmation.php\" method=\"post\">\n            \n            <center> \n              <img \n              src=\"https://png.pngitem.com/pimgs/s/104-1044084_insta-logo-hd-png-download.png\" \n              alt=\"\"  \n              style={{\n                width: 50,\n                height: 40,  \n                marginBottom: 8,\n                }}\n                />\n                <h3 style={{fontStyle: 'italic',}}> <p>SIGNIN HERE</p></h3> \n            </center>\n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" name=\"email\" placeholder=\"email\" required=\"required\" value={email} onChange={(e)=> setEmail(e.target.value)}/>\n            </div>\n            <div class=\"form-group\">\n              <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\" required=\"required\" value={password} onChange={(e)=> setPassword(e.target.value)}/>\t\n            </div>        \n            <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-primary btn-lg btn-block login-btn\" onClick={popupSignIn}>SignIN</button>\n            </div>\n\t\t\t\t</form>\n          \n      \n    </div>\n    </Modal>\n      \n      <div className=\"app_header\">\n        <img          \n          src=\"https://png.pngitem.com/pimgs/s/104-1044084_insta-logo-hd-png-download.png\" \n          alt=\"\"  \n          style={{\n            width: 40,\n            height: 50,\n            borderRadius: 30, \n            marginBottom: 3,\n            }}>\n        </img>\n        <h1 className=\"title\">Instagram</h1>\n\n      </div>\n      {/* conditional button says if user is not null  then i want to render these where the button says to signout else new user is then signup */}\n      {user ?(\n        <Button onClick={()=> auth.signOut()}>SIGN OUT</Button>\n        ) : (\n          <div className=\"sign_container\">\n            <Button onClick={signIn}>SIGN IN</Button>  \n            <Button onClick={signUp}>SIGN UP</Button>\n          </div>\n          \n          )}\n\n      {posts.map(({id, post}) =>{   //we have use destructure method here for id\n        return(\n          <Post key={id} username={post.username} caption={post.caption} imageUrl={post.imageUrl}/>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}